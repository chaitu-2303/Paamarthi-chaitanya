#include <stdio.h>

void calculateWaitingTime(int processes[], int n, int burst_time[], int waiting_time[]) {
    waiting_time[0] = 0; 

    for (int i = 1; i < n; i++)
        waiting_time[i] = burst_time[i-1] + waiting_time[i-1];
}

void calculateTurnAroundTime(int processes[], int n, int burst_time[], int waiting_time[], int turnaround_time[]) {
    for (int i = 0; i < n; i++)
        turnaround_time[i] = burst_time[i] + waiting_time[i];
}

void calculateAverageTimes(int processes[], int n, int burst_time[], int waiting_time[], int turnaround_time[]) {
    int total_waiting_time = 0, total_turnaround_time = 0;

    for (int i = 0; i < n; i++) {
        total_waiting_time += waiting_time[i];
        total_turnaround_time += turnaround_time[i];
    }

    printf("Average waiting time = %.2f\n", (float)total_waiting_time / n);
    printf("Average turnaround time = %.2f\n", (float)total_turnaround_time / n);
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int processes[n], burst_time[n];
    printf("Enter the burst times of the processes:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d: ", i+1);
        scanf("%d", &burst_time[i]);
        processes[i] = i+1;
    }

    int waiting_time[n], turnaround_time[n];

    calculateWaitingTime(processes, n, burst_time, waiting_time);

    calculateTurnAroundTime(processes, n, burst_time, waiting_time, turnaround_time);

    calculateAverageTimes(processes, n, burst_time, waiting_time, turnaround_time);

    return 0;
}
